name: Build Godot APK

on:
  workflow_dispatch:  # ðŸ‘‰ Parte solo a comando manuale

jobs:
  build-apk:
    name: Build Android APK Skirat-Games
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download Godot Editor (v4.4)
      run: |
        wget https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_linux.x86_64.zip
        unzip Godot_v4.4-stable_linux.x86_64.zip -d godot
        mv godot/Godot_v4.4-stable_linux.x86_64 godot/godot
        chmod +x godot/godot
        echo "$GITHUB_WORKSPACE/godot" >> $GITHUB_PATH

    - name: Download Export Templates
      run: |
        wget github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_export_templates.tpz
        mkdir -p ~/.local/share/godot/export_templates/4.4.stable/
        unzip Godot_v4.4-stable_export_templates.tpz -d ~/.local/share/godot/export_templates/4.4.stable/
        mv ~/.local/share/godot/export_templates/4.4.stable/templates/* ~/.local/share/godot/export_templates/4.4.stable/
    
    - name: Setup Android SDK
      env:
        ANDROID_SDK_ROOT: ${{ runner.tool_cache }}/android-sdk
      run: |
        mkdir -p $ANDROID_SDK_ROOT
        cd $ANDROID_SDK_ROOT

        # Scarica SDK Tools (command line tools) da Google
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip
        rm cmdline-tools.zip

        # Muovi la cartella estratta nella posizione giusta
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/{bin,lib,source.properties} cmdline-tools/latest/

        # Aggiungi tools al PATH
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH

        # Accetta le licenze
        yes | sdkmanager --licenses

        # Installa solo ciÃ² che serve per la build Android
        sdkmanager "platform-tools" "platforms;android-30" "build-tools;35.0.0"

    # - name: Setup Android SDK
    #   run: |
    #     yes | sdkmanager --licenses
    #     sdkmanager "build-tools;35.0.0" "platform-tools" "platforms;android-30"

    # 1. Decodifica il keystore, ma non lo usiamo ancora
    - name: Decode keystore from Base64
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android_release.keystore

    # 2. Esporta un APK DI RELEASE MA NON FIRMATO. 
    #    Godot non ha bisogno di accedere al keystore qui.
    - name: Export Unsigned Android APK
      run: |
        mkdir -p build/android
        godot --headless --export-debug "Android" build/android/game.apk

    # 3. Ora firmiamo l'APK esportato usando un'azione dedicata e affidabile
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      env:
        BUILD_TOOLS_VERSION: 35.0.0
      with:
        # La cartella dove si trova l'APK non firmato
        releaseDirectory: build/android
        # I secret necessari per la firma
        signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        alias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: godot-apk
        path: build/android/game.apk